{"version":3,"sources":["components/Snack.jsx","components/Nav.jsx","components/Card.jsx","components/Search.jsx","App.js","reducers/repo.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","snackbar","margin","spacing","connect","state","dispatch","add","action","props","classes","ws","WebSocket","_useState","useState","_useState2","Object","slicedToArray","status","setStatus","useEffect","rate","fetch","then","res","json","data","ticker","price","catch","console","log","result","addEventListener","onopen","JSON","stringify","op","send","subscribe","onmessage","msg","allData","parse","x","out","map","conVal","value","Math","pow","hash","time","usd","btc","filter","element","length","type","insert","unsubscribe","react_default","a","createElement","SnackbarContent","className","message","concat","display","gridTemplateColumns","justifyItems","backgroundColor","padding","SimpleBottomNavigation","_React$useState","React","_React$useState2","setValue","RenderRedirect","react_router","to","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","ShowChart_default","Search_default","Date","style","flexDirection","index_esm","chartType","loader","toConsumableArray","options","hAxis","title","vAxis","rootProps","data-testid","currencies","container","flexWrap","textField","marginLeft","marginRight","dense","marginTop","menu","width","currency","setCurrency","_useState3","_useState4","searchField","setSearchField","_useState5","_useState6","srchArr","setSrchArr","isNaN","tempArr","_loop","step","closest","reduce","prev","curr","abs","push","find","Fragment","TextField","id","target","variant","select","SelectProps","MenuProps","helperText","option","MenuItem","key","alignContent","justifyContent","alignItems","store","createStore","arguments","undefined","newState","forEach","sort","b","slice","App","es","react_router_dom","components_Snack","exact","path","component","Card","Search","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5665835d.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 600\n  },\n  snackbar: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction Snack(props) {\n  const classes = useStyles();\n  let ws = new WebSocket(\"wss://ws.blockchain.info/inv\");\n  const [status, setStatus] = useState(\"Connecting...\");\n\n  useEffect(() => {\n    let rate;\n    let prom = fetch(\"https://api.cryptonator.com/api/ticker/btc-usd\")\n      .then(res => res.json())\n      .then(data => data.ticker.price)\n      .catch(console.log);\n    prom.then(result => (rate = result));\n\n    ws.addEventListener(\"close\", () => setStatus(\"Closed\"));\n    ws.addEventListener(\"open\", () => setStatus(\"Connected\"));\n    ws.onopen = () => subscribe();\n    ws.onmessage = msg => insert(msg, rate);\n    return () => unsubscribe();\n  });\n  function insert(msg, rate) {\n    let allData = JSON.parse(msg.data);\n    allData = allData.x;\n    let data = allData.out.map(data => {\n      let conVal = data.value / 10 ** 8;\n      return {\n        hash: allData.hash,\n        time: allData.time,\n        usd: conVal * rate,\n        btc: conVal\n      };\n    });\n    data = data.filter(element => element.btc >= 1);\n\n    if (data.length > 0) {\n      props.add({\n        data: data,\n        type: \"ADD\"\n      });\n    }\n  }\n  function unsubscribe() {\n    let data = JSON.stringify({ op: \"unconfirmed_unsub\" });\n    ws.send(data);\n  }\n\n  function subscribe() {\n    let data = JSON.stringify({ op: \"unconfirmed_sub\" });\n    ws.send(data);\n  }\n  return (\n    <div>\n      <SnackbarContent\n        className={classes.snackbar}\n        message={`Status: ${status}`}\n      />\n    </div>\n  );\n}\nconst mapStateToProps = state => ({\n  //state: state\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    add: action => dispatch(action)\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Snack);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport ShowChart from \"@material-ui/icons/ShowChart\";\nimport Search from \"@material-ui/icons/Search\";\nimport { Redirect } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr\",\n    justifyItems: \"center\",\n    backgroundColor: \"pink\",\n    padding: \"1em .5em\",\n    margin: \"1em .5em\"\n  }\n});\n\nexport default function SimpleBottomNavigation() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  function RenderRedirect() {\n    if (value) return <Redirect to=\"/search\" />;\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div>\n      <RenderRedirect />\n      <BottomNavigation\n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n        }}\n        showLabels\n        className={classes.root}\n      >\n        <BottomNavigationAction label=\"Chart\" icon={<ShowChart />} />\n        <BottomNavigationAction label=\"Search\" icon={<Search />} />\n      </BottomNavigation>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Chart from \"react-google-charts\";\n\nfunction Card(props) {\n  let state = props.state.map(data => {\n    return [new Date(data.time), data.usd];\n  });\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <Chart\n        chartType=\"LineChart\"\n        loader={<div>Loading Chart</div>}\n        data={[[\"y\", \"$\"], ...state]}\n        options={{\n          hAxis: {\n            title: \"Time\"\n          },\n          vAxis: {\n            title: \"Value $\"\n          }\n        }}\n        rootProps={{ \"data-testid\": \"1\" }}\n      />\n    </div>\n  );\n}\nconst mapStateToProps = state => ({\n  state: state\n});\n\nexport default connect(mapStateToProps)(Card);\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\n\nconst currencies = [\n  {\n    value: \"usd\",\n    label: \"$\"\n  },\n  {\n    value: \"btc\",\n    label: \"฿\"\n  }\n];\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(0.5),\n    marginRight: theme.spacing(0.5)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  menu: {\n    width: 200\n  }\n}));\n\nfunction Search(props) {\n  let [currency, setCurrency] = useState(\"usd\");\n  let [searchField, setSearchField] = useState(0);\n  let [srchArr, setSrchArr] = useState([]);\n  const classes = useStyles();\n\n  useEffect(() => {\n    let state = [...props.state];\n    if (isNaN(searchField) || !(props.state && props.state.length)) {\n      setSrchArr(null);\n    } else if (state && state.length > 2) {\n      let tempArr = [];\n      for (let step = 0; step < 3; step++) {\n        let valArr = state.map(element => element[currency]);\n        let closest = valArr.reduce(function(prev, curr) {\n          return Math.abs(curr - searchField) < Math.abs(prev - searchField)\n            ? curr\n            : prev;\n        });\n\n        tempArr.push(state.find(element => element[currency] === closest));\n        state = state.filter(element => element[currency] !== closest);\n      }\n      setSrchArr([...tempArr]);\n    }\n  }, [[...props.state], searchField]);\n\n  return (\n    <>\n      <div\n        style={{\n          padding: \"1em 1em\",\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr\"\n        }}\n      >\n        <TextField\n          id=\"outlined-search\"\n          label=\"Search field\"\n          type=\"search\"\n          className={classes.textField}\n          onChange={event => setSearchField(event.target.value)}\n          margin=\"normal\"\n          variant=\"outlined\"\n        />\n        <TextField\n          id=\"outlined-select-currency\"\n          select\n          label=\"Select\"\n          className={classes.textField}\n          value={currency}\n          onChange={event => setCurrency(event.target.value)}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu\n            }\n          }}\n          helperText=\"Please select your currency\"\n          margin=\"normal\"\n          variant=\"outlined\"\n        >\n          {currencies.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n      <div>\n        {srchArr &&\n          srchArr.length > 0 &&\n          srchArr.map(element => (\n            <div\n              key={element.usd}\n              style={{\n                display: \"grid\",\n                padding: \".5em\",\n                margin: \".20em\",\n                gridTemplateColumns: \"2fr 1fr 1fr\",\n                alignContent: \"space-around\",\n                backgroundColor: \"pink\",\n                justifyContent: \"space-evenly\",\n                alignItems: \"flex-start\"\n              }}\n            >\n              <div>\n                <h3>Hash:</h3>\n                <p>{element.hash}</p>\n              </div>\n              <div>\n                <h3>USD: </h3>\n                <p>{element.usd}</p>\n              </div>\n              <div>\n                <h3> BTC: </h3>\n                <p>{element.btc}</p>\n              </div>\n            </div>\n          ))}\n      </div>\n    </>\n  );\n}\nconst mapStateToProps = state => ({\n  state: state\n});\n\nexport default connect(mapStateToProps)(Search);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport Snack from \"./components/Snack\";\nimport Nav from \"./components/Nav\";\nimport Card from \"./components/Card\";\nimport Search from \"./components/Search\";\nimport repo from \"./reducers/repo\";\nimport { createStore } from \"redux\";\n\nconst store = createStore(repo);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Snack />\n        <Nav />\n        <Route exact path=\"/\" component={Card} />\n        <Route path=\"/search\" component={Search} />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","export default function repo(state = [], action) {\n  switch (action.type) {\n    case \"ADD\":\n      let newState = [...state];\n      let length = action.data.length;\n      if (newState.length + length <= 10) {\n        action.data.forEach(element => {\n          newState.push(element);\n        });\n        return newState.sort((a, b) => a.time - b.time);\n      } else {\n        newState = newState.slice(length);\n        action.data.forEach(element => {\n          newState.push(element);\n        });\n        return newState.sort((a, b) => a.time - b.time);\n      }\n    default:\n      return state;\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}